openapi: 3.0.0
info:
  title: Kubrick API
  version: 1.0.0
  description: |-
    This OpenAPI specification describes the Kubrick API for video ingestion,
    search, and management. It supports multimodal search queries using text,
    images, audio, or video, as well as generation of video uploads links and embedding task tracking.
servers:
  - url: https://example.cloudfront.net
    description: Kubrick API

paths:
  /generate-upload-link:
    get:
      summary: Generate a pre-signed URL to upload a video file
      operationId: generateUploadLink
      parameters:
        - name: filename
          in: query
          required: true
          schema:
            type: string
          description: Name of the file to upload.
          example: test.mp4
      responses:
        "200":
          description: Pre-signed upload URL successfully generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      presigned_url:
                        type: string
                        format: url
                        example: https://kubrick.s3.amazonaws.com/uploads/abc123/example.mp4?signature=xyz
                      filename:
                        type: string
                        example: test.mp4
                      file_extension:
                        type: string
                        example: .mp4
                      expires_in_seconds:
                        type: integer
                        example: 3600
                      upload_method:
                        type: string
                        example: PUT
                      content_type:
                        type: string
                        example: video/mp4
        "400":
          description: Bad Request — Invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorResponse"
        "500":
          description: Internal Server Error — Could not generate upload link.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorResponse"
  /videos:
    get:
      summary: Retrieve a paginated list of videos in the library
      operationId: getVideos
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number for pagination (0-based index).
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of results per page.
          example: 10
      responses:
        "200":
          description: List of videos retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Video"
                  metadata:
                    $ref: "#/components/schemas/ResponseMetadata"
        "400":
          description: Bad Request — Invalid query parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorResponse"
        "500":
          description: Internal Server Error — Could not retrieve videos.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorResponse"
  /tasks:
    get:
      summary: Retrieve a paginated list of processing tasks
      operationId: getTasks
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number for pagination (0-based index).
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of results per page.
          example: 10
      responses:
        "200":
          description: List of processing tasks retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 14
                        sqs_message_id:
                          type: string
                          nullable: true
                          example: 1035a509-c0ce-4690-93e1-fb6e82dc671b
                        s3_bucket:
                          type: string
                          example: kubrick-video-library-09885bf7f493aa87
                        s3_key:
                          type: string
                          example: uploads/34a23d0b-3c70-4bda-b068-038b7e6944e1/example.mp4
                        created_at:
                          type: string
                          example: 2025-08-05T21:25:13.945897
                        updated_at:
                          type: string
                          example: 2025-08-05T21:25:33.672864
                        status:
                          type: string
                          enum: [processing, completed, failed]
                          example: completed
                  metadata:
                    $ref: "#/components/schemas/ResponseMetadata"
        "400":
          description: Bad Request — Invalid query parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorResponse"
        "500":
          description: Internal Server Error — Could not retrieve tasks.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorResponse"
  /search:
    post:
      summary: Search for a video using text or media query
      operationId: searchVideo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                query_type:
                  type: string
                  enum: [text, image, video, audio]
                  description: |
                    Specifies the input modality for the search query: text, image, video, or audio.
                query_text:
                  type: string
                  description: Text query used when query_type is set to "text".
                query_media_url:
                  type: string
                  format: url
                  description:
                    URL of the media file to use for search when using image,
                    video, or audio queries.
                query_media_file:
                  type: string
                  format: binary
                  description:
                    Upload a media file (image, video, or audio) for search.
                query_modality:
                  type: string
                  enum: [visual-text, audio]
                  description: |
                    Specifies the semantic modality of the query.
                    - "visual-text": Search based on visual captions or scene descriptions.
                    - "audio": Search based on audio features or speech.
                filter:
                  type: string
                  description: |
                    Optional filter expression to narrow search results.
                    Examples: "duration > 30", "metadata.genre = 'comedy'".
                min_similarity:
                  type: number
                  description:
                    Minimum similarity threshold (0–1) required to include a
                    result in the response.
                limit:
                  type: integer
                  description: Maximum number of results to return per page.
              required:
                - query_type
      responses:
        "200":
          description: Video search results have been successfully returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchResult"
                  metadata:
                    $ref: "#/components/schemas/ResponseMetadata"
        "400":
          description: Bad Request — Invalid search parameters or file upload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorResponse"
        "500":
          description: Internal Server Error — Search request failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorResponse"
components:
  schemas:
    Video:
      type: object
      description: |
        Represents a video stored in the Kubrick video library, including its metadata
        and accessible URL. Videos can be searched, retrieved, and linked to processing tasks.
      properties:
        id:
          type: integer
          example: 14
        s3_bucket:
          type: string
          example: kubrick-video-library-09885bf7f493aa87
        s3_key:
          type: string
          example: uploads/34a23d0b-3c70-4bda-b068-038b7e6944e1/example.mp4
        filename:
          type: string
          example: example.mp4
        duration:
          type: number
          example: 155.82912
        created_at:
          type: string
          example: 2025-08-05T20:00:58.336478
        updated_at:
          type: string
          example: 2025-08-05T20:00:58.336478
        height:
          type: integer
          nullable: true
          example: null
        width:
          type: integer
          nullable: true
          example: null
        url:
          type: string
          format: url
          example: https://kubrick-video-library.s3.ap-southeast-2.amazonaws.com/uploads/abc123/example.mp4
    SearchResult:
      type: object
      properties:
        id:
          type: integer
          example: 1197
        modality:
          type: string
          enum: [visual-text, audio]
        scope:
          type: string
          enum: [video, clip]
        start_time:
          type: number
          example: 54.0
        end_time:
          type: number
          example: 60.0
        similarity:
          type: number
          example: 0.95
        video:
          $ref: "#/components/schemas/Video"
    ResponseMetadata:
      type: object
      description: Pagination information.
      properties:
        page:
          type: integer
          example: 0
        limit:
          type: integer
          example: 10
        total:
          type: integer
          example: 10
    400ErrorResponse:
      type: object
      description: Error response object.
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: INVALID_REQUEST
            message:
              type: string
              example: Missing query parameters
    500ErrorResponse:
      type: object
      description: Error response object.
      properties:
        message:
          type: string
          example: Internal Server Error
